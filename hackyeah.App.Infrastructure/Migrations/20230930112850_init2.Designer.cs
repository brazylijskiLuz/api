// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using hackyeah.App.Infrastructure.DataAccess;

#nullable disable

namespace hackyeah.App.Infrastructure.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230930112850_init2")]
    partial class init2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("hackyeah.App.Domain.Entities.Institution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nip")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RSPO")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Regon")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("_institutions");
                });

            modelBuilder.Entity("hackyeah.App.Domain.Entities.Institution", b =>
                {
                    b.OwnsOne("hackyeah.App.Domain.ValueObjects.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("InstitutionId")
                                .HasColumnType("uuid");

                            b1.Property<string>("BuildingNumber")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("District")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("FlatNumber")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("PostCode")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Province")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("StreetProps")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("InstitutionId");

                            b1.ToTable("_institutions");

                            b1.WithOwner()
                                .HasForeignKey("InstitutionId");
                        });

                    b.OwnsOne("hackyeah.App.Domain.ValueObjects.Contact", "Contact", b1 =>
                        {
                            b1.Property<Guid>("InstitutionId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Fax")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Phone")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("RSPO")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("InstitutionId");

                            b1.ToTable("_institutions");

                            b1.WithOwner()
                                .HasForeignKey("InstitutionId");
                        });

                    b.OwnsOne("hackyeah.App.Domain.ValueObjects.MapLocalization", "MapLocalization", b1 =>
                        {
                            b1.Property<Guid>("InstitutionId")
                                .HasColumnType("uuid");

                            b1.Property<double>("X")
                                .HasColumnType("double precision");

                            b1.Property<double>("Y")
                                .HasColumnType("double precision");

                            b1.HasKey("InstitutionId");

                            b1.ToTable("_institutions");

                            b1.WithOwner()
                                .HasForeignKey("InstitutionId");
                        });

                    b.OwnsOne("hackyeah.App.Domain.ValueObjects.Person", "Director", b1 =>
                        {
                            b1.Property<Guid>("InstitutionId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Surname")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("InstitutionId");

                            b1.ToTable("_institutions");

                            b1.WithOwner()
                                .HasForeignKey("InstitutionId");
                        });

                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("Contact")
                        .IsRequired();

                    b.Navigation("Director")
                        .IsRequired();

                    b.Navigation("MapLocalization")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
