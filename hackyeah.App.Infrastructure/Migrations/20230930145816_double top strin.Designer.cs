// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using hackyeah.App.Infrastructure.DataAccess;

#nullable disable

namespace hackyeah.App.Infrastructure.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230930145816_double top strin")]
    partial class doubletopstrin
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("hackyeah.App.Domain.Entities.University", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AddressHistoryAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AddressHistoryReceiptDate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AddressNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AddressStreet")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AuthorityHistoryAssignmentDate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AuthorityHistorySupervisoryAuthority")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreationDateOrEntryDate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EntryNumberForPrivateUniversities")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FederationEndDate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FederationMemberInstitutionIdentifier")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FederationMemberInstitutionName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FederationStartDate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HeadPersonData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HeadPersonIdentifier")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("InheritingInstitutionsID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("InheritingInstitutionsKRS")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("InheritingInstitutionsNIP")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("InheritingInstitutionsName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("InheritingInstitutionsPANRegisterNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("InheritingInstitutionsPrivateUniversityEntryNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("InheritingInstitutionsREGON")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("InheritingInstitutionsSupervisoryAuthority")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("InheritingInstitutionsTransformationDate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("InheritingInstitutionsTransformationType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("InstitutionName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("InstitutionType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("KRS")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LiquidationDate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LiquidationStartDate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MailingAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NIP")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NamesDateOfNaming")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NamesName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PANInstituteRegisterNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PrecedingInstitutionsID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PrecedingInstitutionsKRS")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PrecedingInstitutionsNIP")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PrecedingInstitutionsName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PrecedingInstitutionsPANRegisterNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PrecedingInstitutionsPrivateUniversityEntryNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PrecedingInstitutionsREGON")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PrecedingInstitutionsSupervisoryAuthority")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PrecedingInstitutionsTransformationDate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PrecedingInstitutionsTransformationType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("REGON")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ScientificInstitutionType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StateResearchInstitute")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StatusHistoryStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StatusHistoryStatusDate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SupervisoryAuthority")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TypeHistoryType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TypeHistoryTypeDate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UniversityNumberByMinister")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UniversityType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Voivodeship")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("YearOfStateResearchInstitute")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("_university");
                });

            modelBuilder.Entity("hackyeah.App.Domain.Entities.UniversityData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreationDateOrEntryDate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("InstitutionName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("InstitutionType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("KRS")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NIP")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("REGON")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("_universityData");
                });

            modelBuilder.Entity("hackyeah.App.Domain.Entities.UniversityData", b =>
                {
                    b.OwnsOne("hackyeah.App.Domain.ValueObjects.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("UniversityDataId")
                                .HasColumnType("uuid");

                            b1.Property<string>("BuildingNumber")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("District")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("PostCode")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Province")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("UniversityDataId");

                            b1.ToTable("_universityData");

                            b1.WithOwner()
                                .HasForeignKey("UniversityDataId");
                        });

                    b.OwnsOne("hackyeah.App.Domain.ValueObjects.MapLocalization", "MapLocalization", b1 =>
                        {
                            b1.Property<Guid>("UniversityDataId")
                                .HasColumnType("uuid");

                            b1.Property<string>("X")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Y")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("UniversityDataId");

                            b1.ToTable("_universityData");

                            b1.WithOwner()
                                .HasForeignKey("UniversityDataId");
                        });

                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("MapLocalization")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
